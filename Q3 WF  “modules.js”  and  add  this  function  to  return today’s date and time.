Write  node  js  script  to  build  Your  Own  Node.js  Module.  Use  require  (‘http’) module  is  a  built-in  Node  module  that  invokes  the  functionality  of  the  HTTP library 
to create a local server.  Also use the export statement to make functions in  your  module  available  externally.  Create  a  new  text  file  to  contain  the functions  in  your  module  
called,  “modules.js”  and  add  this  function  to  return today’s date and time.

1. Create a new file named `modules.js` in your project directory. This file will containthe module's functions.
 ```javascript
 // modules.js
// Function to get today's date and time
function getCurrentDateTime() {
 const currentDate = new Date();
return currentDate.toISOString();
 }
 // Export the getCurrentDateTime function
module.exports = { getCurrentDateTime };

In this file, we define a function `getCurrentDateTime` that returns the current date
and time in ISO format. We then export this function using `module.exports`.
2. Create a separate JavaScript file (`main.js` or any other name you prefer) where
you will use your custom module.
 ```javascript
 // main.js
 // Import your custom module
const myModule = require('./module');
 // Use the getCurrentDateTime function from your module
const currentDateTime = myModule.getCurrentDateTime();
 console.log(`Current date and time: ${currentDateTime}`);

 In this file, we import the custom module `modules.js` using `require` and then call
the `getCurrentDateTime` function to get the current date and time, which we print to
the console.
3. Now, you can run your `main.js` script using Node.js:
 ```bash
 node main.js
 ```
 This will execute the script, and you should see the current date and time printed in
the console, which is obtained from your custom module.
By using the `exports` statement in `modules.js`, you've made the
`getCurrentDateTime` function available for use in other Node.js files.
